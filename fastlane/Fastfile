# frozen_string_literal: true

# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane
FASTFILE_PATH = File.expand_path(File.dirname(File.dirname(__FILE__)))
XCODE_PROJECT = File.join(FASTFILE_PATH, '..', 'Unity-iPhone', 'Unity-iPhone.xcodeproj')
CONFIG_TYPE = 'development'
TEAK_APP_EXTENSIONS = %w[TeakNotificationService TeakNotificationContent].freeze
BUILD_CONFIGURATIONS = %w[Debug Release ReleaseForRunning ReleaseForProfiling].freeze

def ci?
  ENV.fetch('CI', false).to_s == 'true'
end

default_platform(:ios)

desc 'Copy or download the Teak SDK'
lane :sdk do
  version = teak_sdk(
    sdk: :unity,
    destination: '.'
  )
  File.write(File.join('..', 'TEAK_VERSION'), version)
end

platform :android do
  lane :deploy do
    puts google_play_track_version_codes(
      package_name: 'io.teak.app.unity.dev',
      track: 'internal',
      json_key: File.join(FASTFILE_PATH, '..', 'supply.key.json')
    )
  end
end

platform :ios do
  before_all do
    setup_circle_ci
  end

  desc 'Build targeting Dev profile'
  lane :dev do
    BUILD_CONFIGURATION = 'Debug'

    if ci?
      # Create/fetch and store provisioning profiles
      ios_provisioning_profile = {}
      ['io.teak.app.unity.dev'].each do |app_id|
        match(
          app_identifier: app_id,
          type: CONFIG_TYPE,
          readonly: true
        )
        provisioning_profile_env = Match::Utils.environment_variable_name_profile_path(
          app_identifier: app_id,
          type: CONFIG_TYPE
        )
        ios_provisioning_profile['Unity-iPhone'] = ENV[provisioning_profile_env]

        TEAK_APP_EXTENSIONS.each do |app_extension_name|
          match(
            app_identifier: "#{app_id}.#{app_extension_name}",
            type: CONFIG_TYPE,
            readonly: true
          )

          provisioning_profile_env = Match::Utils.environment_variable_name_profile_path(
            app_identifier: "#{app_id}.#{app_extension_name}",
            type: CONFIG_TYPE
          )
          ios_provisioning_profile[app_extension_name] = ENV[provisioning_profile_env]
        end
      end

      # Add Teak app extensions -- This is done by Unity now
      # teak_extensions(
      #   xcodeproj: XCODE_PROJECT,
      #   # source:"~/Code/teak-ios"
      # )

      (TEAK_APP_EXTENSIONS + ['Unity-iPhone']).each do |target|
        update_project_provisioning(
          xcodeproj: XCODE_PROJECT,
          target_filter: target,
          profile: ios_provisioning_profile[target],
          build_configuration: BUILD_CONFIGURATION
        )
      end

      sync_code_signing
      disable_automatic_code_signing(path: XCODE_PROJECT)
    end

    enable_automatic_code_signing(path: XCODE_PROJECT) unless ci?

    build_ios_app(
      project: XCODE_PROJECT,
      scheme: 'Unity-iPhone',
      configuration: BUILD_CONFIGURATION,
      clean: true,
      output_directory: File.join(FASTFILE_PATH, '..'),
      output_name: 'teak-unity-cleanroom.ipa',
      export_method: CONFIG_TYPE
    )
  end

  desc 'Fast build with no code signing'
  lane :ci do
    xcodebuild(
      project: XCODE_PROJECT,
      scheme: 'Unity-iPhone',
      configuration: 'Release',
      build: true,
      destination: 'generic/platform=iOS',
      build_settings: {
        'CODE_SIGNING_REQUIRED' => 'NO',
        'CODE_SIGN_IDENTITY' => ''
      }
    )
  end
end
